/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: Digital Resources
Programmer: HashTagDad
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
// #SYMBOL_NAME ""
// #HINT ""
// #DEFINE_CONSTANT
// #CATEGORY "" 
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM
/*
#HELP_BEGIN
   (add additional lines of help lines)
#HELP_END
*/

/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""
#INCLUDEPATH "C:\\Programming\\S#\\htdCoreData\\htdCoreData\\bin\\Debug"
#USER_SIMPLSHARP_LIBRARY "htdCoreData"

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT debug,testCall,easyMenu,advancedMenu;
STRING_INPUT path[25];

ANALOG_OUTPUT ItemCount;
DIGITAL_OUTPUT ItemEnable[10];
STRING_OUTPUT ItemNames[10],ItemIcons[10]; 


Interface myInterface;

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
/*******************************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
*******************************************************************************************/
// Create a function here to run through the count and populate the array accordingly


/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
Change debug
{

	myInterface.debug = debug;
}

PUSH testCall
{
	//MenuCount = myInterface.count;
	//myInterface.Test();
	INTEGER Index;
	for(Index = 1 to myInterface.count)
	{
    	myInterface.GetMenuItem(Index);
		ItemEnable[Index] = myInterface.RetrieveVisibility();
		ItemNames[Index] = myInterface.RetrieveName();
		ItemIcons[Index] = myInterface.RetrieveIcon();
	}

}

PUSH easyMenu
{
    myInterface.GetCount(path);
    ItemCount = myInterface.count;

}

PUSH advancedMenu
{
    myInterface.GetCount(path);
    ItemCount = myInterface.count;

}


//CALLBACK FUNCTION ReceiveData(String[]itemNames,String[]itemIcons,Integer[]itemBlank)

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
	WaitForInitializationComplete();
	
		//REGISTERDELEGATE(myInterface, MenuData, ReceiveData);
}


